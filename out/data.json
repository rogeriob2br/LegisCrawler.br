{
    "project": {},
    "files": {
        "config/config.js": {
            "name": "config/config.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "crawl/Clean.js": {
            "name": "crawl/Clean.js",
            "modules": {},
            "classes": {
                "": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "crawl/Crawl.js": {
            "name": "crawl/Crawl.js",
            "modules": {
                "Crawler": 1
            },
            "classes": {
                "Crawl": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "crawl/Scrap.js": {
            "name": "crawl/Scrap.js",
            "modules": {},
            "classes": {
                "Scrap": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "helpers/Name.js": {
            "name": "helpers/Name.js",
            "modules": {},
            "classes": {
                "Name": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "models/Category.js": {
            "name": "models/Category.js",
            "modules": {
                "Models": 1
            },
            "classes": {
                "Category": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "models/Layout.js": {
            "name": "models/Layout.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "models/Type.js": {
            "name": "models/Type.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "Crawler": {
            "name": "Crawler",
            "submodules": {},
            "elements": {},
            "classes": {
                "": 1,
                "Crawl": 1,
                "Scrap": 1,
                "Name": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "helpers/Name.js",
            "line": 32,
            "description": "Crawl urls for the desired content"
        },
        "Models": {
            "name": "Models",
            "submodules": {},
            "elements": {},
            "classes": {
                "Category": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "models/Category.js",
            "line": 6,
            "description": "Category Model Class"
        }
    },
    "classes": {
        "": {
            "file": "crawl/Clean.js",
            "line": 44,
            "module": "Crawler"
        },
        "Crawl": {
            "name": "Crawl",
            "shortname": "Crawl",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Crawler",
            "namespace": "",
            "file": "crawl/Crawl.js",
            "line": 7,
            "description": "Crawl urls for the desired content"
        },
        "Scrap": {
            "name": "Scrap",
            "shortname": "Scrap",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Crawler",
            "namespace": "",
            "file": "crawl/Scrap.js",
            "line": 9,
            "description": "Scrap HTMLs to get specific content"
        },
        "Name": {
            "name": "Name",
            "shortname": "Name",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Crawler",
            "namespace": "",
            "file": "helpers/Name.js",
            "line": 32,
            "description": "Class to get the name of a legislation"
        },
        "Category": {
            "name": "Category",
            "shortname": "Category",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Models",
            "namespace": "",
            "file": "models/Category.js",
            "line": 6,
            "description": "Category Model Class"
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "config/config.js",
            "line": 9,
            "description": "Get the configuration",
            "return": {
                "description": "The configuration JSON",
                "type": "JSON"
            },
            "class": "Crawl"
        },
        {
            "file": "crawl/Clean.js",
            "line": 4,
            "description": "Gets an article or paragraph number only",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "dirtyText",
                    "description": "The full text",
                    "type": "String"
                },
                {
                    "name": "regEx",
                    "description": "The regular expression with the article or paragraph",
                    "type": "Object"
                },
                {
                    "name": "cleanCapGroups",
                    "description": "The capturing groups that exclude the thousands separator and\n                                  the ordinal chars",
                    "type": "String"
                },
                {
                    "name": "numberCapGroups",
                    "description": "The capturing groups to get only the numeric part",
                    "type": "String"
                },
                {
                    "name": "lettersCapGroups",
                    "description": "The capturing groups to get only the text part of the article\n                                  number",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The \"number only\" of the article or paragraph (it may contain\n                                  letters – ex: 103-A – and ordinal chars – ex: 1º)",
                "type": "String"
            },
            "class": "Crawl"
        },
        {
            "file": "crawl/Clean.js",
            "line": 61,
            "description": "Pre cleaning function removes all double spaces and text things that shoudn't be there",
            "static": 1,
            "params": [
                {
                    "name": "dirtyText",
                    "description": "The full text",
                    "type": "Strign"
                }
            ],
            "return": {
                "description": "The clean text",
                "type": "Strign"
            },
            "class": "Crawl"
        },
        {
            "file": "crawl/Clean.js",
            "line": 98,
            "description": "Post cleaning function trims the text and add line breaks before items",
            "static": 1,
            "params": [
                {
                    "name": "originsText",
                    "description": "The text already cleaned by preCleaning",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The trimmed text with line breaks on items",
                "type": "String"
            },
            "class": "Crawl"
        },
        {
            "file": "crawl/Clean.js",
            "line": 128,
            "description": "Cleans the article number",
            "static": 1,
            "params": [
                {
                    "name": "dirtyText",
                    "description": "The article text",
                    "type": "Strign"
                }
            ],
            "return": {
                "description": "The clean article number",
                "type": "Strign"
            },
            "class": "Crawl"
        },
        {
            "file": "crawl/Clean.js",
            "line": 172,
            "description": "Some texts don't follow the patterns and need to be treated individually",
            "static": 1,
            "params": [
                {
                    "name": "legislation",
                    "description": "The name of the legislation",
                    "type": "String"
                },
                {
                    "name": "number",
                    "description": "The article number",
                    "type": "String"
                },
                {
                    "name": "text",
                    "description": "The article text",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The article text corrected",
                "type": "String"
            },
            "class": "Crawl"
        },
        {
            "file": "crawl/Crawl.js",
            "line": 13,
            "description": "Crawl Planalto's main page: http://www4.planalto.gov.br/legislacao/portal-legis/legislacao-1\nCapture all links and return the link and the title as a promise",
            "itemtype": "method",
            "name": "mainLegislationPage",
            "params": [
                {
                    "name": "crawlUrl",
                    "description": "Url to be crawled",
                    "type": "String"
                }
            ],
            "static": 1,
            "return": {
                "description": "Array of legislations with name and link",
                "type": "Promise"
            },
            "class": "Crawl",
            "module": "Crawler"
        },
        {
            "file": "crawl/Crawl.js",
            "line": 89,
            "description": "Check the type of a legislation page",
            "itemtype": "method",
            "name": "checkType",
            "static": 1,
            "params": [
                {
                    "name": "checkUrl",
                    "description": "The url that will be parsed and verified the Type",
                    "type": "String"
                }
            ],
            "return": {
                "description": "A Type (DATE or LEGISLATION)",
                "type": "Promise"
            },
            "class": "Crawl",
            "module": "Crawler"
        },
        {
            "file": "crawl/Scrap.js",
            "line": 15,
            "description": "Scrap Layout.GENERAL_LIST HTML to get it's links and create a Category for each",
            "itemtype": "method",
            "name": "generalListCategories",
            "static": 1,
            "params": [
                {
                    "name": "html",
                    "description": "The HTML that will be scraped",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Array of 'Category' objects",
                "type": "Array"
            },
            "class": "Scrap",
            "module": "Crawler"
        },
        {
            "file": "crawl/Scrap.js",
            "line": 82,
            "description": "Scrap Layout.COLUMNS_LIST HTML to get it's links and create a Category for each",
            "itemtype": "method",
            "name": "columnsListCategories",
            "static": 1,
            "params": [
                {
                    "name": "html",
                    "description": "The HTML that will be scraped",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Array of 'Category' objects",
                "type": "Array"
            },
            "class": "Scrap",
            "module": "Crawler"
        },
        {
            "file": "crawl/Scrap.js",
            "line": 149,
            "description": "Scrap Layout.DATES_LIST HTML to get it's links and create a Category for each",
            "itemtype": "method",
            "name": "datesListCategories",
            "static": 1,
            "params": [
                {
                    "name": "html",
                    "description": "The HTML that will be scraped",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Array of 'Category' objects",
                "type": "Array"
            },
            "class": "Scrap",
            "module": "Crawler"
        },
        {
            "file": "crawl/Scrap.js",
            "line": 220,
            "description": "Check the layout of an HTML",
            "itemtype": "method",
            "name": "layout",
            "static": 1,
            "params": [
                {
                    "name": "html",
                    "description": "The HTML that will be parsed to discover the layout",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The Layout of the HTML ('GENERAL_LIST', 'COLUMNS_LIST'\n                 or 'DATES_LIST')",
                "type": "String"
            },
            "class": "Scrap",
            "module": "Crawler"
        },
        {
            "file": "crawl/Scrap.js",
            "line": 284,
            "description": "Breakes the article into it's number and it's text",
            "params": [
                {
                    "name": "cleanText",
                    "description": "The text already cleanned to be parsed into articles",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Array with each article object",
                "type": "Array"
            },
            "example": [
                "\n[\n   {\n     number: '1º',\n     article: 'Os menores de 18 anos são penalmente inimputáveis, ficando sujeitos às …'\n   },\n   {\n     number: '10',\n     article: 'É assegurada a \\nparticipação dos trabalhadores e empregadores nos …'\n   }\n]"
            ],
            "class": "Scrap",
            "module": "Crawler"
        },
        {
            "file": "crawl/Scrap.js",
            "line": 344,
            "description": "Some texts don't follow the patterns and need to be treated individually",
            "static": 1,
            "params": [
                {
                    "name": "legislationName",
                    "description": "The name of the legislation",
                    "type": "String"
                },
                {
                    "name": "dirtyArticles",
                    "description": "Array of articles to be clean",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Array of clean articles",
                "type": "Array"
            },
            "class": "Scrap",
            "module": "Crawler"
        },
        {
            "file": "helpers/Name.js",
            "line": 3,
            "description": "Transform no accent, dash separated text in the correct legislation name",
            "itemtype": "method",
            "name": "correctImageName",
            "params": [
                {
                    "name": "name",
                    "description": "The original image file name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The legislation name",
                "type": "String"
            },
            "access": "private",
            "tagname": "",
            "class": "Name",
            "module": "Crawler"
        },
        {
            "file": "helpers/Name.js",
            "line": 39,
            "description": "Transform no accent, dash separated text in the correct legislation name",
            "itemtype": "method",
            "name": "fromImageUrl",
            "params": [
                {
                    "name": "imageUrl",
                    "description": "The original URL of the image",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The legislation name",
                "type": "String"
            },
            "static": 1,
            "class": "Name",
            "module": "Crawler"
        },
        {
            "file": "models/Category.js",
            "line": 12,
            "description": "Category constructor",
            "itemtype": "method",
            "name": "constructor",
            "params": [
                {
                    "name": "name ",
                    "description": "- The category name",
                    "type": "String",
                    "optional": true,
                    "optdefault": " null"
                },
                {
                    "name": "url ",
                    "description": "- The category url",
                    "type": "String",
                    "optional": true,
                    "optdefault": " null"
                }
            ],
            "is_constructor": 1,
            "class": "Category",
            "module": "Models"
        },
        {
            "file": "models/Category.js",
            "line": 35,
            "description": "List all categories",
            "itemtype": "method",
            "name": "list",
            "return": {
                "description": "Array with categories objects",
                "type": "Array"
            },
            "static": 1,
            "class": "Category",
            "module": "Models"
        },
        {
            "file": "models/Category.js",
            "line": 67,
            "description": "Save the category in the DB",
            "itemtype": "method",
            "name": "save",
            "class": "Category",
            "module": "Models"
        },
        {
            "file": "models/Layout.js",
            "line": 7,
            "description": "Check the layout of an HTML",
            "itemtype": "method",
            "name": "check",
            "static": 1,
            "params": [
                {
                    "name": "html",
                    "description": "The HTML that will be parsed to discover the layout",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The Layout object of the HTML",
                "type": "Object"
            },
            "example": [
                "\n{\n name: 'GENERAL_LIST',\n ordinal: 0\n}\nOR\n{\n name: 'COLUMNS_LIST',\n ordinal: 1\n}\nOR\n{\n name: 'DATES_LIST',\n ordinal: 2\n}"
            ],
            "class": "",
            "module": "Models"
        },
        {
            "file": "models/Type.js",
            "line": 4,
            "description": "Check the type of a legislation page",
            "itemtype": "method",
            "name": "type",
            "static": 1,
            "params": [
                {
                    "name": "checkUrl",
                    "description": "The url that will be parsed and verified the Type",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The type of the url",
                "type": "Object"
            },
            "example": [
                "\n{\n name: 'LEGISLATION',\n ordinal: 0\n}\nOR\n{\n name: 'PDF',\n ordinal: 1\n}\nOR\n{\n name: 'DOC',\n ordinal: 2\n}\nOR\n{\n name: 'LIST',\n ordinal: 3\n}"
            ],
            "class": "",
            "module": "Models"
        }
    ],
    "warnings": [
        {
            "message": "Missing item type\nGet the configuration",
            "line": " config/config.js:9"
        },
        {
            "message": "Missing item type\nGets an article or paragraph number only",
            "line": " crawl/Clean.js:4"
        },
        {
            "message": "Missing item type\nPre cleaning function removes all double spaces and text things that shoudn't be there",
            "line": " crawl/Clean.js:61"
        },
        {
            "message": "Missing item type\nPost cleaning function trims the text and add line breaks before items",
            "line": " crawl/Clean.js:98"
        },
        {
            "message": "Missing item type\nCleans the article number",
            "line": " crawl/Clean.js:128"
        },
        {
            "message": "Missing item type\nSome texts don't follow the patterns and need to be treated individually",
            "line": " crawl/Clean.js:172"
        },
        {
            "message": "Missing item type\nBreakes the article into it's number and it's text",
            "line": " crawl/Scrap.js:284"
        },
        {
            "message": "Missing item type\nSome texts don't follow the patterns and need to be treated individually",
            "line": " crawl/Scrap.js:344"
        }
    ]
}